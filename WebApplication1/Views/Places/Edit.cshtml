@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    var id = ViewContext.RouteData.Values["id"];

}
<div id="app">
    <h1>Update Place</h1>
    <form v-on:submit.prevent="submit">
        <div class="mt-3">
            <label class="form-label">Name</label>
            <input v-model="form.name" type="text" class="form-control" />
        </div>

        <div class="mt-3">
            <label class="form-label">Description</label>
            <input v-model="form.description" type="text" class="form-control" required />
        </div>


        <div class="mt-3">
            <label class="form-label">Location</label>
            <input v-model="form.location" type="text" class="form-control" required />
        </div>
        <div class="mt-3" id="googleMap" style="width:100%;height:380px;">
        </div>
        <div class="mt-3">
            <label class="form-label">Latitude</label>
            <input v-model="form.latitude" type="text" class="form-control" required disabled/>
        </div>

        <div class="mt-3">
            <label class="form-label">Longitude</label>
            <input v-model="form.longitude" type="text" class="form-control" required disabled/>
        </div>

        <div v-if="isLoading == false" class="mt-3">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
        <div v-else class="mt-3">
            <button type="submit" class="btn btn-primary">Loading...</button>
        </div>
    </form>

</div>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2.6.0"></script>
<script src="https://unpkg.com/vue-swal"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAOVYRIgupAurZup5y1PRh8Ismb1A3lLao"></script>

<script>
    var app = new Vue({
        el: "#app",
        data() {
            return {
                marker:null,
                isLoading: false,
                form: {
                    name: "",
                    description: "",
                    location: "",
                    latitude: "",
                    longitude: "",
                },
            };
        },
        mounted() {
            this.getData("@id");
        },
        methods: {
            changeMarker(peta, posisi) {
                if (this.marker != null) {
                    this.marker.setPosition(posisi);
                } else {
                    this.marker = new google.maps.Marker({
                        position: posisi,
                        map: peta
                    });
                }
            },
            initializeMap(lat,lng) {
                var propertiPeta = {
                    center: new google.maps.LatLng(lat,lng),
                    zoom: 9,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                var peta = new google.maps.Map(document.getElementById("googleMap"), propertiPeta);
                this.marker = new google.maps.Marker({
                    position: new google.maps.LatLng(lat, lng),
                    map: peta
                });
                google.maps.event.addListener(peta, 'click', event => {
                    this.changeMarker(peta, event.latLng);
                    this.form.latitude = event.latLng.lat();
                    this.form.longitude = event.latLng.lng();
                });
            },
            submit() {
                this.isLoading = true;
                axios.put("/api/location/@id", this.form).then((resp) => {
                    this.isLoading = false;
                    this.$swal("Success !", "Record are successfully updated !", "success");
                    window.location.href = "/Places/List";
                    console.log("Berhasil");
                }).catch((err) => {
                    this.isLoading = false;
                    console.log(err);
                    this.$swal("Error", "Failed to update record,Something went wrong.", "error");
                });

            },
            getData(id) {
                this.isLoading = true;
                axios.get("/api/location/"+id).then((resp) => {
                    this.isLoading = false;
                    this.form = resp.data;
                    this.initializeMap(this.form.latitude, this.form.longitude);
                    console.log("Berhasil");
                }).catch((err) => {
                    this.isLoading = false;
                    this.$swal("Error", "Failed to add fetch record,Something went wrong.", "error");
                });
            }
        },
    });

</script>

